/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package labtechmode;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SpringLayout;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author rhoz
 */
public class JFlabTech extends javax.swing.JFrame {

    String host = "jdbc:mysql://localhost:3306/HospitalSys";
    String user = "root";
    String pass = "";

    /**
     * Creates new form JFlabTech
     */
    public JFlabTech() {

        String sql = "Select * FROM Test";

        initComponents();
        this.setLocationRelativeTo(null);
        jCpossibleTests.addItem("-Select Test-");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jBviewAllTest = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTestResults = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jladdsuccess = new javax.swing.JLabel();
        test = new javax.swing.JButton();
        jCpossibleTests = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jladdtesterror = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jBview_details = new javax.swing.JButton();
        jTpatientId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        pat_age = new javax.swing.JLabel();
        tfpatRecordId = new javax.swing.JTextField();
        pat_name = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setTitle("Laboratory Test");
        setResizable(false);

        jPanel1.setBackground(java.awt.Color.white);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Lab Tech"));

        jBviewAllTest.setText("View All Tests");
        jBviewAllTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBviewAllTestActionPerformed(evt);
            }
        });

        jTestResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTestResults);

        jPanel2.setBackground(java.awt.Color.white);

        jladdsuccess.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jladdsuccess.setForeground(new java.awt.Color(0, 27, 255));
        jladdsuccess.setText("Test Complete, record added successfully...");
        jladdsuccess.setVisible(false);

        test.setText("Tests");
        test.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testActionPerformed(evt);
            }
        });

        jCpossibleTests.setToolTipText("Select a test");
        jCpossibleTests.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jCpossibleTests.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCpossibleTestsItemStateChanged(evt);
            }
        });
        jCpossibleTests.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCpossibleTestsActionPerformed(evt);
            }
        });

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jladdtesterror.setForeground(new java.awt.Color(181, 13, 13));
        jladdtesterror.setText("Error recording the test...");
        jladdtesterror.setVisible(false);

        jLabel5.setFont(new java.awt.Font("Cantarell", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(46, 96, 104));
        jLabel5.setText("Recommended Tests");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(test, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCpossibleTests, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jladdtesterror, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jladdsuccess, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCpossibleTests, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(test)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jladdtesterror)
                    .addComponent(jladdsuccess))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jCpossibleTests.getAccessibleContext().setAccessibleName("");

        jPanel3.setBackground(java.awt.Color.white);

        jLabel2.setText("Name :");
        jLabel2.setVisible(false);

        jLabel3.setText("Age     :");
        jLabel3.setVisible(false);

        jBview_details.setText("view Details");
        jBview_details.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBview_detailsActionPerformed(evt);
            }
        });

        jTpatientId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTpatientId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTpatientIdActionPerformed(evt);
            }
        });
        jTpatientId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTpatientIdKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Cantarell", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(31, 107, 117));
        jLabel4.setText("Patient Details");
        jLabel4.setVisible(true);

        pat_age.setBackground(java.awt.Color.white);
        pat_age.setFont(new java.awt.Font("DejaVu Sans", 0, 12)); // NOI18N

        tfpatRecordId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tfpatRecordId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfpatRecordIdActionPerformed(evt);
            }
        });
        tfpatRecordId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfpatRecordIdKeyTyped(evt);
            }
        });

        pat_name.setBackground(java.awt.Color.white);
        pat_name.setFont(new java.awt.Font("DejaVu Sans", 0, 11)); // NOI18N
        pat_name.setForeground(new java.awt.Color(109, 88, 88));

        jLabel6.setText("Patient RecordID");

        jLabel1.setText("Enter Patient ID");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTpatientId)
                            .addComponent(tfpatRecordId, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1)
                    .addComponent(jBview_details, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel4))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pat_name, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pat_age, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTpatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(tfpatRecordId, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jBview_details, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(pat_name, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pat_age, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBviewAllTest, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jScrollPane1))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBviewAllTest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel7.setFont(jLabel7.getFont().deriveFont(jLabel7.getFont().getStyle() | java.awt.Font.BOLD, 18));
        jLabel7.setForeground(new java.awt.Color(150, 116, 23));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("LAB TESTING");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(234, 234, 234)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBviewAllTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBviewAllTestActionPerformed

        System.out.println("jBviewAllTestActionPerformed CLICKED");
        DefaultTableModel dtm = new Gen_all_tests_table().testResults();
        jTestResults.setModel(dtm);
    }//GEN-LAST:event_jBviewAllTestActionPerformed

    private void testActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testActionPerformed
        ArrayList<String> Testing = new ArrayList<>();
        Testing = JoptionpaneTest();
        for (int i = 0; i < Testing.size(); i++) {
            System.out.println("OK PRESSED   " + i + " " + Testing.get(i) + "  pat_labTest_id  " + pat_labTest_id);
        }

        String sqlupdate = "UPDATE LabTest_has_Test SET description = '" + Testing.get(1) + "',"
                + " results = '" + Testing.get(2)
                + "' WHERE LabTest_id = " + pat_labTest_id + " AND Test_id =" + TestId;
        try {
            Connection conn = DriverManager.getConnection(host, user, pass);
            Statement s = conn.prepareStatement(sqlupdate);
            s.execute(sqlupdate);

            System.out.println("LabTestHasTests updated successfully");
            jladdsuccess.setVisible(true);

        } catch (Exception e) {
            jladdtesterror.setVisible(true);
            System.out.println("Complications while updating Table LABTESThASrESULTS!");
            e.printStackTrace();
        }
    }//GEN-LAST:event_testActionPerformed

    private void jBview_detailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBview_detailsActionPerformed
        jCpossibleTests.removeAll();
        aoPatDet();

    }//GEN-LAST:event_jBview_detailsActionPerformed

    private void jTpatientIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTpatientIdActionPerformed

    }//GEN-LAST:event_jTpatientIdActionPerformed

    private void jCpossibleTestsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCpossibleTestsActionPerformed
        // openJoptOnComboSel();
    }//GEN-LAST:event_jCpossibleTestsActionPerformed

    private void jCpossibleTestsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCpossibleTestsItemStateChanged


    }//GEN-LAST:event_jCpossibleTestsItemStateChanged

    private void tfpatRecordIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfpatRecordIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfpatRecordIdActionPerformed

    private void jTpatientIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTpatientIdKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE)) || c == KeyEvent.VK_DELETE) {
            getToolkit().beep();
            evt.consume();
        }
        if (jTpatientId.getText().trim().length() > 10) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jTpatientIdKeyTyped

    private void tfpatRecordIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfpatRecordIdKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE)) || c == KeyEvent.VK_DELETE) {
            getToolkit().beep();
            evt.consume();
        }
        if (tfpatRecordId.getText().trim().length() > 10) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tfpatRecordIdKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:.
        jCpossibleTests.removeAllItems();
        recoTest.clear();
        jBview_details.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    private void jTpatientIdActionPerformed(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c))) {

            evt.consume();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFlabTech().setVisible(true);
            }

        });
    }

    //Action both when View det is clicked or evter key pressed
    int pat_labTest_id = 0;

    // j take the indexes of Test ids
    ArrayList<String> recoTest = new ArrayList<>();

    //String TestId = recoTest.get(j);
    public ArrayList<String> aoPatDet() {

        String sql = "SELECT Patient.Firstname, Patient.age, PatientRecord.LabTest_id FROM Patient "
                + "INNER JOIN PatientRecord "
                + "ON Patient.id=PatientRecord.Patient_id "
                + "WHERE PatientRecord.Patient_id=" + jTpatientId.getText() + " AND PatientRecord.id=" + tfpatRecordId.getText();
       
        
        if (jTpatientId.getText().isEmpty() || tfpatRecordId.getText().isEmpty()) {
            System.out.println("The patient ID or Record ID cannot be blank.");
        }else{
        
        jCpossibleTests.removeAllItems();
        jCpossibleTests.removeAll();

        try {
            Connection conn = DriverManager.getConnection(host, user, pass);
            Statement s = conn.prepareStatement(sql);
            ResultSet rs = s.executeQuery(sql);
            boolean x = false;
            while (rs.next()) {
                x = true;
                // System.out.println("Name: " + rs.getString("Patient.Firstname") + " Age: " + rs.getString("Patient.age") + "Test Id" + rs.getInt("labTest.id"));
                pat_name.setText(rs.getString("Patient.Firstname"));
                pat_age.setText(rs.getString("Patient.age"));

                //declare the labTest and assign value to be used to retreive the Tests to be carried out
                pat_labTest_id = rs.getInt("PatientRecord.LabTest_id");
                System.out.println("XXXXXX" + pat_labTest_id);
                jLabel2.setVisible(true);
                jLabel3.setVisible(true);
                jLabel4.setVisible(true);
                pat_age.setVisible(true);
                pat_name.setVisible(true);

            }
            if (x) {
                jBview_details.setEnabled(false);
                //Query Doctor's Recommrnded Tests
                String sqlrt = "SELECT LabTest_has_Test.Test_id, Test.id, Test.title FROM Test"
                        + " INNER JOIN LabTest_has_Test "
                        + "ON LabTest_has_Test.Test_id=Test.id "
                        + "WHERE LabTest_has_Test.LabTest_id=" + pat_labTest_id;

                ResultSet Tests = conn.prepareStatement(sqlrt).executeQuery(sqlrt);
                System.out.println("Tests On This Patient");

                while (Tests.next()) {
                    //int labTest_has_TestTest_id = Tests.getInt("LabTest_has_Test.Test_id");
                    System.out.println(Tests.getString("Test.title"));
                    //recoTest.add(Tests.getString("LabTest_has_Test.Test_id"));
                    recoTest.add(Tests.getString("Test.title"));

                }

                jCpossibleTests.addItem("-Select Test-");

                for (int i = 0; i < recoTest.size(); i++) {
                    System.out.println("THE TESTS ARE:" + recoTest.get(i));
                    jCpossibleTests.addItem(recoTest.get(i));
                }

                //Get the Test ids
               /* for (int j = 0; j < recoTest.size(); j++) {
                    System.out.println("THE TESTS ARE:" + recoTest.get(j));
                }*/
            } else {
                JOptionPane.showMessageDialog(null, "No patient Record Matchig The Combination!", "Error", JOptionPane.INFORMATION_MESSAGE);
                jBview_details.setEnabled(true);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        jTpatientId.setText("");
        tfpatRecordId.setText("");
        jBview_details.disable();
        }
        return recoTest;
        
    }

    ArrayList<String> TestResults = new ArrayList<>();
    int TestId = 0;
//The method pops up the joption pane and returns the an arrayLisy of all doctirs recomended Tests.

    public ArrayList<String> JoptionpaneTest() {

        JFrame frame = new JFrame("");

        final SpringLayout layout = new SpringLayout();
        final JPanel panel = new JPanel(layout);
        panel.setPreferredSize(new Dimension(355, 200));

        JLabel lbltitle = new JLabel("Test Title");
        panel.add(lbltitle);
        JTextField tftitle = new JTextField();
        tftitle.setText((String) jCpossibleTests.getSelectedItem().toString());

        String t_title_toge_Test_id = tftitle.getText();
        System.out.println(t_title_toge_Test_id);
        tftitle.disable();

        //Get the Test id depending on the sellected item from the jcombobox
        String sqlgetId = "SELECT id FROM Test WHERE title='" + t_title_toge_Test_id + "'";
        try {
            Connection conn = DriverManager.getConnection(host, user, pass);
            Statement ss = conn.prepareStatement(sqlgetId);
            ResultSet rss = ss.executeQuery(sqlgetId);
            while (rss.next()) {
                System.out.println(rss.getInt("id"));
                TestId = rss.getInt("id");
            }
        } catch (Exception e) {
            System.out.println("NO ID FOUNGD...");
            e.printStackTrace();
        }
        //jCpossibleTests.getSelectedIndex(disable());
        tftitle.setBorder(BorderFactory.createLineBorder(Color.black));
        panel.add(tftitle);

        JLabel lbldescr = new JLabel("Test Description");
        panel.add(lbldescr);
        JTextArea tadescr = new JTextArea();
        tadescr.setBorder(BorderFactory.createLineBorder(Color.black));
        tadescr.setLineWrap(true);
        tadescr.setWrapStyleWord(true);
        JScrollPane scrollPane = new JScrollPane(tadescr,
                JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,
                JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        scrollPane.setPreferredSize(new Dimension(350, 90));
        panel.add(scrollPane);

        JLabel lblresults = new JLabel("Test Results");
        panel.add(lblresults);
        JTextField tfresults = new JTextField(31);
        tfresults.setBorder(BorderFactory.createLineBorder(Color.black));
        panel.add(tfresults);

        layout.putConstraint(SpringLayout.WEST, lbltitle, 0, SpringLayout.WEST, panel);

        layout.putConstraint(SpringLayout.NORTH, lbldescr, 10, SpringLayout.SOUTH, lbltitle);

        layout.putConstraint(SpringLayout.WEST, tftitle, 25, SpringLayout.EAST, lbltitle);

        layout.putConstraint(SpringLayout.NORTH, scrollPane, 10, SpringLayout.SOUTH, lbldescr);

        layout.putConstraint(SpringLayout.NORTH, lblresults, 10, SpringLayout.SOUTH, scrollPane);

        layout.putConstraint(SpringLayout.NORTH, tfresults, 10, SpringLayout.SOUTH, lblresults);

        int result = JOptionPane.showConfirmDialog(frame, panel,
                "Test", JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.YES_OPTION) {
            System.out.println(tftitle.getText() + ",\n" + tadescr.getText());
            System.out.println(tfresults.getText() + ",\n" + TestResults);
            TestResults.add(tftitle.getText());
            TestResults.add(tadescr.getText());
            TestResults.add(tfresults.getText());

            //DefaultTableModel dtm=new Gen_all_Tests_table().TestResults();
            //jTestResults.set
//            new JFlabTech().jTestResults.setModel(dtm);
        } else {
            System.out.println("Canceled");
        }
//for(int i=0; i<TestResults.size();i++){
//    System.out.println("The Componet Array List Are: "+(i+1)+" "+TestResults.get(i));
//}

        return TestResults;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jBviewAllTest;
    private javax.swing.JButton jBview_details;
    private javax.swing.JComboBox jCpossibleTests;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTestResults;
    private javax.swing.JTextField jTpatientId;
    private javax.swing.JLabel jladdsuccess;
    private javax.swing.JLabel jladdtesterror;
    private javax.swing.JLabel pat_age;
    private javax.swing.JLabel pat_name;
    private javax.swing.JButton test;
    private javax.swing.JTextField tfpatRecordId;
    // End of variables declaration//GEN-END:variables
}
